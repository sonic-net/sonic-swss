# C/C++ with GCC
# Build your C/C++ project with GCC using make.
# Add steps that publish test results, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/c-cpp/gcc

pr:
- master
- 202???
- 201???

trigger:
  batch: true
  branches:
    include:
    - master
    - 202???
    - 201???

# this part need to be set in UI
schedules:
- cron: "0 0 * * 6"
  displayName: Weekly build
  branches:
    include:
    - master
    - 202???
    - 201???
  always: true

resources:
  repositories:
  - repository: sonic-mgmt
    type: github
    name: sonic-net/sonic-mgmt
    ref: master
    endpoint: sonic-net
  - repository: buildimage
    type: github
    name: xwjiang-ms/sonic-buildimage
    endpoint: sonic-net
    ref: remove_remote_import_template

parameters:
  - name: debian_version
    type: string
    default: bookworm

  - name: CHECKOUT_SONIC_MGMT
    type: boolean
    default: true

variables:
  - name: BUILD_BRANCH
    ${{ if eq(variables['Build.Reason'], 'PullRequest') }}:
      value: $(System.PullRequest.TargetBranch)
    ${{ else }}:
      value: $(Build.SourceBranchName)
  - name: PULL_REQUEST_ID
    value: $(System.PullRequest.PullRequestNumber)
  - name: CACHE_MODE
    value: rcache
  - name: ENABLE_FIPS
    value: y

stages:
- stage: Build

  jobs:
  - template: .azure-pipelines/build-template.yml
    parameters:
      arch: amd64
      pool: sonicbld-1es
      sonic_slave: sonic-slave-${{ parameters.debian_version }}
      common_lib_artifact_name: common-lib
      swss_common_artifact_name: sonic-swss-common-${{ parameters.debian_version }}
      sairedis_artifact_name: sonic-sairedis-${{ parameters.debian_version }}
      artifact_name: sonic-swss-${{ parameters.debian_version }}
      archive_pytests: true
      archive_gcov: true

- stage: BuildAsan
  dependsOn: []
  jobs:
  - template: .azure-pipelines/build-template.yml
    parameters:
      arch: amd64
      pool: sonicbld-1es
      sonic_slave: sonic-slave-${{ parameters.debian_version }}
      common_lib_artifact_name: common-lib
      swss_common_artifact_name: sonic-swss-common-${{ parameters.debian_version }}
      sairedis_artifact_name: sonic-sairedis-${{ parameters.debian_version }}
      artifact_name: sonic-swss-asan-${{ parameters.debian_version }}
      asan: true

- stage: BuildArm
  dependsOn: Build
  condition: succeeded('Build')
  jobs:
  - template: .azure-pipelines/build-template.yml
    parameters:
      arch: armhf
      timeout: 240
      pool: sonicbld-armhf
      sonic_slave: sonic-slave-${{ parameters.debian_version }}-armhf
      common_lib_artifact_name: common-lib.armhf
      swss_common_artifact_name: sonic-swss-common-${{ parameters.debian_version }}.armhf
      sairedis_artifact_name: sonic-sairedis-${{ parameters.debian_version }}.armhf
      artifact_name: sonic-swss-${{ parameters.debian_version }}.armhf
      archive_gcov: false

  - template: .azure-pipelines/build-template.yml
    parameters:
      arch: arm64
      timeout: 240
      pool: sonicbld-arm64
      sonic_slave: sonic-slave-${{ parameters.debian_version }}-arm64
      common_lib_artifact_name: common-lib.arm64
      swss_common_artifact_name: sonic-swss-common-${{ parameters.debian_version }}.arm64
      sairedis_artifact_name: sonic-sairedis-${{ parameters.debian_version }}.arm64
      artifact_name: sonic-swss-${{ parameters.debian_version }}.arm64
      archive_gcov: false

- stage: BuildDocker
  dependsOn: Build
  condition: succeeded('Build')
  jobs:
  - template: .azure-pipelines/build-docker-sonic-vs-template.yml
    parameters:
      swss_common_artifact_name: sonic-swss-common-${{ parameters.debian_version }}
      sairedis_artifact_name: sonic-sairedis-${{ parameters.debian_version }}
      swss_artifact_name: sonic-swss-${{ parameters.debian_version }}
      debian_version: ${{ parameters.debian_version }}
      artifact_name: docker-sonic-vs

- stage: BuildDockerAsan
  dependsOn: BuildAsan
  condition: succeeded('BuildAsan')
  jobs:
  - template: .azure-pipelines/build-docker-sonic-vs-template.yml
    parameters:
      swss_common_artifact_name: sonic-swss-common-${{ parameters.debian_version }}
      sairedis_artifact_name: sonic-sairedis-${{ parameters.debian_version }}
      swss_artifact_name: sonic-swss-asan-${{ parameters.debian_version }}
      artifact_name: docker-sonic-vs-asan
      debian_version: ${{ parameters.debian_version }}
      asan: true

- stage: Test
  dependsOn: BuildDocker
  condition: succeeded('BuildDocker')
  jobs:
  - template: .azure-pipelines/test-docker-sonic-vs-template.yml
    parameters:
      log_artifact_name: log
      gcov_artifact_name: sonic-gcov
      sonic_slave: sonic-slave-${{ parameters.debian_version }}
      archive_gcov: true

- stage: TestAsan
  dependsOn: BuildDockerAsan
  condition: succeeded('BuildDockerAsan')
  jobs:
  - template: .azure-pipelines/test-docker-sonic-vs-template.yml
    parameters:
      log_artifact_name: log-asan
      gcov_artifact_name: sonic-gcov
      sonic_slave: sonic-slave-${{ parameters.debian_version }}
      docker_sonic_vs_name: docker-sonic-vs-asan
      asan: true

- stage: Gcov
  condition: false
  dependsOn: Test
  jobs:
  - template: .azure-pipelines/gcov.yml
    parameters:
      arch: amd64
      sonic_slave: sonic-slave-${{ parameters.debian_version }}
      swss_common_artifact_name: sonic-swss-common-${{ parameters.debian_version }}
      sairedis_artifact_name: sonic-sairedis-${{ parameters.debian_version }}
      swss_artifact_name: sonic-swss-${{ parameters.debian_version }}
      artifact_name: sonic-gcov
      archive_gcov: true

- stage: BuildImageAndTest
  pool: sonicbld-1es
  dependsOn: []
  variables:
  - group: SONiC-Elastictest
  jobs:
  - job: BuildImageAndTest
    steps:
    - task: AzureCLI@2
      inputs:
        azureSubscription: "SONiC-Automation"
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az pipelines run \
            --org "$(SONIC_ORG)" \
            --project "$(BUILD_IMG_PROJECT)" \
            --id "$(BUILD_IMG_PIPELINE_ID)" \
            --branch "$(BUILD_BRANCH)" \
            --parameters SUBMODULE=sonic-swss \
            --parameters SUBMODULE_PR_ID=$(PULL_REQUEST_ID) \
            --debug


# - stage: BuildImage
#   pool: sonicbld-1es
#   dependsOn: []
#   jobs:
#   - template: .azure-pipelines/azure-pipelines-build.yml@buildimage
#     parameters:
#       buildOptions: 'USERNAME=admin SONIC_BUILD_JOBS=$(nproc) ${{ variables.VERSION_CONTROL_OPTIONS }}'
#       jobGroups:
#       - name: broadcom
#         variables:
#           swi_image: yes
#           docker_syncd_rpc_image: yes
#           platform_rpc: brcm
#           INCLUDE_RESTAPI: y
#       - name: mellanox
#         variables:
#           dbg_image: yes
#           docker_syncd_rpc_image: yes
#           platform_rpc: mlnx
#       - name: marvell-prestera-arm64
#         pool: sonicbld-arm64
#         variables:
#           PLATFORM_NAME: marvell-prestera
#           PLATFORM_ARCH: arm64
#       - name: marvell-prestera-armhf
#         pool: sonicbld-armhf
#         timeoutInMinutes: 1200
#         variables:
#           PLATFORM_NAME: marvell-prestera
#           PLATFORM_ARCH: armhf
#           INCLUDE_RESTAPI: y
#       SUBMODULE: sonic-swss
#       SUBMODULE_PR_ID: ${{ variables.PULL_REQUEST_ID }}

# - stage: BuildVS
#   pool: sonicbld-1es
#   dependsOn: []
#   jobs:
#   - template: .azure-pipelines/azure-pipelines-build.yml@buildimage
#     parameters:
#       buildOptions: 'USERNAME=admin SONIC_BUILD_JOBS=$(nproc) BUILD_MULTIASIC_KVM=y INCLUDE_DHCP_SERVER=y ${{ variables.VERSION_CONTROL_OPTIONS }}'
#       jobGroups:
#       - name: vs
#       SUBMODULE: sonic-swss
#       SUBMODULE_PR_ID: ${{ variables.PULL_REQUEST_ID }}

# - stage: KVMTest
#   dependsOn: BuildVS
#   condition: and(succeeded(), and(ne(stageDependencies.BuildVS.outputs['vs.SetVar.SKIP_VSTEST'], 'YES'), in(dependencies.BuildVS.result, 'Succeeded', 'SucceededWithIssues')))
#   variables:
#   - group: SONiC-Elastictest
#   - name: inventory
#     value: veos_vtb
#   - name: testbed_file
#     value: vtestbed.csv

#   jobs:
#     - template: .azure-pipelines/pr_test_template.yml@sonic-mgmt
#       parameters:
#         CHECKOUT_SONIC_MGMT: ${{ parameters.CHECKOUT_SONIC_MGMT }}
